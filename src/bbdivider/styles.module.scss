// styles.module.scss

// Color redefinitions to standardize across this file/component
//
$default: var(--divider-color-default, #000000);
$white: var(--white, #ffffff);
$black: var(--black, #000000);
$grey-light: var(--grey-light, #8199c2);
$grey-dark: var(--grey-dark, #58647a);

$primary-color: var(--primary-color, #78cdd7);
$primary-light-color: var(--primary-light-color, lighten(#78cdd7, 10%));
$primary-dark-color: var(--primary-dark-color, darken(#78cdd7, 10%));

$secondary-color: var(--secondary-color, #ffc800);
$secondary-light-color: var(--secondary-light-color, lighten(#ffc800, 10%));
$secondary-dark-color: var(--secondary-dark-color, darken(#ffc800, 10%));

$accent-color: var(--accent-color, #ff6b6c);
$accent-light-color: var(--accent-light-color, lighten(#ff6b6c, 10%));
$accent-dark-color: var(--accent-dark-color, darken(#ff6b6c, 10%));

// Base divider styles
.divider {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

// Orientation styles
.horizontal {
  width: 100%;
  height: auto;
}

.vertical {
  height: 100%;
  width: auto;
}

// Style types
.styleSolid {
  // Border style removed
}

.styleDashed {
  background-image: linear-gradient(to right, currentColor 50%, transparent 50%);
  background-size: 8px 1px;
  background-repeat: repeat-x;
}

.styleDotted {
  background-image: radial-gradient(circle, currentColor 50%, transparent 50%);
  background-size: 4px 4px;
  background-repeat: repeat-x;
}

// Thickness variants
@each $size, $value in ('xs': 1px, 's': 2px, 'm': 3px, 'l': 4px, 'xl': 6px, 'xxl': 8px, 'xxxl': 10px) {
  .thickness#{$size} {
    &.horizontal {
      height: $value;
      background-color: currentColor;

      &.styleDashed {
        background-size: 8px $value;
      }

      &.styleDotted {
        background-size: $value $value;
      }
    }

    &.vertical {
      width: $value;
      background-color: currentColor;

      &.styleDashed {
        background-image: linear-gradient(to bottom, currentColor 50%, transparent 50%);
        background-size: $value 8px;
      }

      &.styleDotted {
        background-image: radial-gradient(circle, currentColor 50%, transparent 50%);
        background-size: $value $value;
        background-repeat: repeat-y;
      }
    }
  }
}

// Length variants
@each $size, $value in ('xs': 25%, 's': 50%, 'm': 75%, 'l': 90%, 'xl': 100%, 'xxl': 150%, 'xxxl': 200%, 'full': 100%) {
  .length#{$size} {
    &.horizontal {
      width: $value;
    }
    &.vertical {
      height: $value;
    }
  }
}

// Margin variants
@each $size, $value in ('none': 0, 'xs': 1px, 's': 0.25rem, 'm': 0.5rem, 'l': 1rem, 'xl': 2rem, 'xxl': 3rem, 'xxxl': 4rem) {
  .margin#{$size} {
    &.horizontal {
      margin: #{$value} 0;
    }
    &.vertical {
      margin: 0 #{$value};
    }
  }
}

// Color variants
@each $name,
  $color
    in (
      'default': $black,
      'white': $white,
      'grey_light': $grey-light,
      'grey_dark': $grey-dark,
      'black': $black,
      'primary': $primary-color,
      'primary_light': $primary-light-color,
      'primary_dark': $primary-dark-color,
      'secondary': $secondary-color,
      'secondary_light': $secondary-light-color,
      'secondary_dark': $secondary-dark-color,
      'accent': $accent-color,
      'accent_light': $accent-light-color,
      'accent_dark': $accent-dark-color
    )
{
  .color#{$name} {
    color: $color;
  }
}
