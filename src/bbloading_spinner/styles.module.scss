// CSS Variables - declared once at the top
$loader-thickness: var(--loading-thickness, 2px);

.containerLoading {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  margin: 8px;
}

// Prevents flash of default values during CSS variable loading
.loaderHidden {
  opacity: 0;
  transition: opacity 0.15s ease-in-out;
}

.loaderVisible {
  opacity: 1;
  transition: opacity 0.15s ease-in-out;
}

/**
* SIZES
*/
.loader_sm {
  width: 24px;
  height: 24px;
}

.loader_md {
  width: 48px;
  height: 48px;
}

.loader_lg {
  width: 64px;
  height: 64px;
}

.primary {
  --loader-color: var(--primary-color);
}

.secondary {
  --loader-color: var(--secondary-color);
}

.accent {
  --loader-color: var(--accent-color);
}

.danger {
  --loader-color: var(--danger-color);
}

.success {
  --loader-color: var(--success-color);
}

.warning {
  --loader-color: var(--warning-color);
}

.info {
  --loader-color: var(--info-color);
}

.black {
  --loader-color: var(--black);
}

.white {
  --loader-color: var(--white);
}

/**
* DEFAULT
*/
.loader_default {
  border: $loader-thickness solid var(--loader-color);
  border-radius: 50%;
  border-top-color: white;
  animation: rotationSpinner 1s linear infinite;
}

@keyframes rotationSpinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/**
* DOUBLE CIRCLE
*/
.loader_double_circle {
  border: $loader-thickness dotted #fff;
  border-style: solid solid dotted dotted;
  border-radius: 50%;
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  animation: rotationDoubleSpinner 2s linear infinite;
}
.loader_double_circle::after {
  content: '';
  box-sizing: border-box;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  margin: auto;
  border: $loader-thickness dotted var(--loader-color);
  border-style: solid solid dotted;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  animation: rotationBackDoubleSpinner 1s linear infinite;
  transform-origin: center center;
}

@keyframes rotationDoubleSpinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes rotationBackDoubleSpinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(-360deg);
  }
}

/**
* CIRCLE BOUNCE
*/
.loader_circle_bounce {
  border: $loader-thickness solid var(--loader-color);
  border-radius: 50%;
  animation: circleBounceSpinner 1s ease-in-out infinite;
}

@keyframes circleBounceSpinner {
  0% {
    transform: scale(0.5);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(0.5);
  }
}

/**
* SPINNING SQUARE
*/
.loader_spinning_square {
  border: $loader-thickness solid var(--loader-color);
  animation: spinningSquareSpinner 3s linear infinite;
}

@keyframes spinningSquareSpinner {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(90deg);
  }
  50% {
    transform: rotate(180deg);
  }
  75% {
    transform: rotate(270deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
